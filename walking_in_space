--W  A  L   K   I   N   G       I   N       S   P   A   C   E--

CREATE DATABASE walking_in_space_repository;

CREATE SCHEMA walking_in_space_storage;

CREATE TABLE IF NOT EXISTS gamer
(
    id       SERIAL PRIMARY KEY,
    login    VARCHAR(45) NOT NULL,
    password VARCHAR(45) NOT NULL,
    name VARCHAR(45) NOT NULL,
    level VARCHAR(45),
    id_community INT,
    id_team INT
);

ALTER TABLE gamers ADD FOREIGN KEY (id_community) REFERENCES community(id);
ALTER TABLE gamers ADD FOREIGN KEY (id_team) REFERENCES team(id);
ALTER TABLE gamer RENAME TO gamers;
ALTER TABLE gamers  ADD CONSTRAINT uniq UNIQUE (login);

ALTER TABLE gamers ADD FOREIGN KEY (id_community) REFERENCES community(id);
ALTER TABLE gamers ADD FOREIGN KEY (id_team) REFERENCES team(id);


SELECT * FROM gamers;

CREATE TABLE IF NOT EXISTS community
(
    id SERIAL PRIMARY KEY,
    name VARCHAR(125)
);

CREATE TABLE IF NOT EXISTS planet
(
    id SERIAL PRIMARY KEY,
    name VARCHAR(125) NOT NULL,
    number_of_steps_to_open INT NOT NULL
);

ALTER TABLE planet RENAME COLUMN number_of_steps_to_open TO number_of_steps;

CREATE TABLE IF NOT EXISTS team
(
    id SERIAL PRIMARY KEY,
    name VARCHAR(125)
);

CREATE TABLE IF NOT EXISTS statistics
(
    id INT PRIMARY KEY,
    id_gamer INT REFERENCES gamers (id),
    date DATE NOT NULL,
    steps INT
);

DROP TABLE statistics;



CREATE TABLE IF NOT EXISTS planet_team
(
    id_planet INT NOT NULL,
    id_team INT NOT NULL,
    PRIMARY KEY (id_planet, id_team),
    FOREIGN KEY (id_planet) REFERENCES planet (id),
    FOREIGN KEY (id_team) REFERENCES team (id)
);

CREATE TABLE IF NOT EXISTS team_community
(
    id_team INT NOT NULL,
    id_community INT NOT NULL,
    PRIMARY KEY (id_team, id_community),
    FOREIGN KEY (id_team) REFERENCES team (id),
    FOREIGN KEY (id_community) REFERENCES community (id)
);

